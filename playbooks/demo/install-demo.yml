---

- hosts: localhost

  vars:
    - install_path: ../../build

  tasks:
    - name: Install packages
      ansible.builtin.package:
        name: "{{ item }}"
      become: true
      become_method: sudo
      tags:
        - install_package
      loop:
        - sysstat
        - python3-psycopg2
        - npm
        - node-typescript
        - openjdk-19-jre
        - maven
        - postgresql

    - name: Create dir core+demo
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      tags:
        - create-demo-openrestdb
      loop:
        - "{{ install_path }}/core"
        - "{{ install_path }}/demo/data"

    - name: Futureforms core npm install
      ansible.builtin.command:
        cmd: npm install
        creates: "../../src/core/package-lock.json"
      args:
        chdir: "../../src/core"
      tags:
        - npm_install_core

    - name: Futureforms demo npm install
      ansible.builtin.command:
        cmd: npm install
        creates: "../../src/demo/package-lock.json"
      args:
        chdir: "../../src/demo"
      tags:
        - npm_install_demo

    - name: Build Futureforms core
      ansible.builtin.command:
        cmd: npm run build
        creates: "{{ install_path }}/core/package.json"
      args:
        chdir: "../../src/core"
      tags:
        - build_core

    - name: Install Futureforms demo app packages based on package.json using the npm
      community.general.npm:
        path: "../../src/demo"
        state: present
      tags:
        - npm_install_demo

    - name: Create the postgres database user hr
      community.postgresql.postgresql_user:
        name: hr
        password: hr
        state: present
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - create-hr-user

    - name: Create the postgres database hr
      community.postgresql.postgresql_db:
        name: hr
        owner: hr
        state: present
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - create-hr-db

    - name: Copy initial data.sql for archive
      ansible.builtin.copy:
        src: ../../src/demo/data/datademo.sql
        dest: "{{ install_path }}/demo/data/"
      tags:
        - copy-data-sql

    - name: Install the postgres hr schema objects
      ansible.builtin.shell:
        cmd: psql -h 127.0.0.1 -U hr -d hr -f "../../src/demo/data/datademo.sql" && touch "{{ install_path }}/demo/dbloaded.true"
        creates: "{{ install_path }}/demo/dbloaded.true"
      environment:
        PGPASSWORD: hr
      tags:
        - install-hr-schema-objects

    - name: Check database.js template exists
      stat:
        path: "{{ install_path }}/demo/bin"
      register: build_demo_openrestdb_bin
      tags: build_demo_openrestdb_bin

    - name: Copy openrestdb template
      ansible.builtin.copy:
        src: "../../src/openrestdb/template/"
        dest: "{{ install_path }}/demo"
        mode: preserve
      when: build_demo_openrestdb_bin.stat.exists == false
      tags: copy_openrestdb_template

    - name: Build openrestdb.jar
      ansible.builtin.command:
        cmd: mvn package
        creates: "../../src/openrestdb/target" 
      args:
        chdir: "../../src/openrestdb"
      tags:
        - build_openrestdb

    - name: Check openrestdb.jar exists
      stat:
        path: "{{ install_path }}/demo/lib/openrestdb-2.1.jar"
      register: check_demo_openrestdb_jar
      tags: check_demo_openrestdb_jar

    - name: Copy openrestdb.jar
      ansible.builtin.copy:
        src: "../../src/openrestdb/target/openrestdb-2.1.jar"
        dest: "{{ install_path }}/demo/lib"
        mode: preserve
      when: check_demo_openrestdb_jar.stat.exists == false
      tags: copy_openrestdb_jar

    - name: Build Futureforms demo app
      ansible.builtin.command:
        cmd: npm run build
        creates: "{{ install_path }}/demo/app/demo.js"
      args:
        chdir: "../../src/demo"
      tags:
        - npm_build_demo

    - name: Pack demo archive for deploy
      community.general.archive:
        path:
          - "{{ install_path }}/demo"
        dest: "{{ install_path }}/demo.tar.gz"
        format: gz
        exclude_path: [ "{{ install_path }}/demo/dbloaded.true" ]
      tags:
        - pack_archive

    - name: Start openrestdb web-server
      ansible.builtin.command:
        cmd: ./bin/openrestdb start
        creates: "{{ install_path }}/demo/logs/inst00/server.log.0.lck"
      args:
        chdir: "{{ install_path }}/demo"
      tags:
        - start_openrestdb

    - name: Start Firefox web-browser
      ansible.builtin.shell:
        cmd: "firefox http://localhost:9002/ > /dev/null 2>&1 &"
      tags:
        - start_firefox

# vim: tabstop=2 expandtab :
