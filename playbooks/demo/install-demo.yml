- hosts: localhost

  vars:
    - install_path: ../../build

  tasks:
    - name: Install packages
      ansible.builtin.package:
        name: "{{ item }}"
      become: true
      become_method: sudo
      tags:
        - install_package
      loop:
        - sysstat
        - git
        - ansible
        - python3-psycopg2
        - npm
        - node-typescript
        - openjdk-19-jre
        - maven
        - postgresql

    - name: Check core is build
      stat:
        path: "{{ install_path }}/core/package.json"
      register: build_core_package_json
      tags: build_core_package_json

    - name: Futureforms core npm install
      ansible.builtin.command: npm install
      args:
        chdir: "../../src/core"
      when: build_core_package_json.stat.exists == false
      tags:
        - npm_install_core

    - name: Build Futureforms core app
      ansible.builtin.command: npm run build
      args:
        chdir: "../../src/core"
      when: build_core_package_json.stat.exists == false
      tags:
        - npm_build_core

    - name: Install Futureforms demo app packages based on package.json using the npm
      community.general.npm:
        path: "../../src/demo"
        state: present
      tags:
        - npm_install_demo

    - name: Create the postgres database user hr
      community.postgresql.postgresql_user:
        name: hr
        password: hr
        state: present
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - create-hr-user

    - name: Create the postgres database hr
      community.postgresql.postgresql_db:
        name: hr
        owner: hr
        state: present
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - create-hr-db

    - name: Install the postgres hr schema objects
      ansible.builtin.command: psql -h 127.0.0.1 -U hr -d hr -f "../../src/demo/data/datademo.sql"
      environment:
        PGPASSWORD: hr
      tags:
        - install-hr-schema-objects

    - name: Create dir demo
      ansible.builtin.file:
        path: "{{ install_path }}/demo"
        state: directory
      tags:
        - create-demo.database.js

    - name: Check database.js template exists
      stat:
        path: "{{ install_path }}/demo/bin"
      register: build_demo_database_js_bin
      tags: build_demo_database_js_bin

    - name: Copy database.js template
      ansible.builtin.copy:
        src: "../../src/database.js/template/"
        dest: "{{ install_path }}/demo"
        mode: preserve
      when: build_demo_database_js_bin.stat.exists == false
      tags: copy_database_js_template

    - name: Build Openrestdb bin
      ansible.builtin.copy:
        src: "../../src/database.js/template/"
        dest: "{{ install_path }}/openrestdb"
        mode: preserve
      when: build_demo_database_js_bin.stat.exists == false
      tags: build_bin

    - name: Check demo.js exists
      stat:
        path: "{{ install_path }}/demo/app/demo.js"
      register: build_demo_demo_js
      tags: build_demo_demo_js

    - name: Build Futureforms demo app
      ansible.builtin.command: npm run build
      args:
        chdir: "../../src/demo"
      when: build_demo_demo_js.stat.exists == false
      tags:
        - npm_build_demo
