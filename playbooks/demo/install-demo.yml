- hosts: localhost

  vars:
    - install_path: ../../build

  tasks:

    - name: Sysstat package
      ansible.builtin.package:
        name: sysstat
      become: true
      become_method: sudo
      tags:
        - install_sysstat

    - name: Git install
      ansible.builtin.package:
        name: git
      become: true
      become_method: sudo
      tags:
        - install_git

    - name: Ansible install
      ansible.builtin.package:
        name: ansible
      become: true
      become_method: sudo
      tags:
        - install_ansible

    - name: Install python3-psycopg2
      ansible.builtin.package:
        name: python3-psycopg2
      become: true
      become_method: sudo
      tags:
        - install_python3-psycopg2

    - name: Unzip install
      ansible.builtin.package:
        name: unzip
      become: true
      become_method: sudo
      tags:
        - install_unzip

    - name: Npm install
      ansible.builtin.package:
        name: npm
      become: true
      become_method: sudo
      tags:
        - install_npm

    - name: Node-typescript install
      ansible.builtin.package:
        name: node-typescript
      become: true
      become_method: sudo
      tags:
        - install_node-typescript

    - name: Openjdk-19-jre install
      ansible.builtin.package:
        name: openjdk-19-jre
      become: true
      become_method: sudo
      tags:
        - install_openjdk-19-jre

    - name: Maven install
      ansible.builtin.package:
        name: maven
      become: true
      become_method: sudo
      tags:
        - install_maven

    - name: Postgresql install
      ansible.builtin.package:
        name: postgresql
      become: true
      become_method: sudo
      tags:
        - install_postgresql

    - name: Check core is build
      stat:
        path: "../../build/core/package.json"
      register: build_core_package_json
      tags: build_core_package_json

    - name: Futureforms core npm install
      ansible.builtin.command: npm install
      args:
        chdir: "../../src/core"
      when: build_core_package_json.stat.exists == false
      tags:
        - npm_install_core

    - name: Build Futureforms core app
      ansible.builtin.command: npm run build
      args:
        chdir: "../../src/core"
      when: build_core_package_json.stat.exists == false
      tags:
        - npm_build_core

    - name: Install Futureforms demo app packages based on package.json using the npm
      community.general.npm:
        path: "../../src/demo"
        state: present
      tags:
        - npm_install_demo

    - name: Check demo.js exists
      stat:
        path: "../../build/demo/demo.js"
      register: build_demo_demo_js
      tags: build_demo_demo_js

    - name: Build Futureforms demo app
      ansible.builtin.command: npm run build
      args:
        chdir: "../../src/demo"
      when: build_demo_demo_js.stat.exists == false
      tags:
        - npm_build_demo

    - name: Remove the postgres database user hr
      community.postgresql.postgresql_user:
        name: hr
        password: hr
        state: absent
        fail_on_user: false
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - remove-hr-user

    - name: Create the postgres database user hr
      community.postgresql.postgresql_user:
        name: hr
        password: hr
        state: present
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - create-hr-user

    - name: Remove the postgres database hr
      community.postgresql.postgresql_db:
        name: hr
        state: absent
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - remove-hr-db

    - name: Create the postgres database hr
      community.postgresql.postgresql_db:
        name: hr
        state: present
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - create-hr-db

    - name: Install the postgres hr schema objects
      ansible.builtin.command: psql -h 127.0.0.1 -U hr -d hr -f "../../src/demo/data/datademo.sql"
      environment:
        PGPASSWORD: hr
      tags:
        - install-hr-schema-objects

    - name: Create dir openrestdb.demo
      ansible.builtin.file:
        path: "{{ install_path }}/openrestdb.demo"
        state: directory
      tags:
        - create-openrestdb.demo

    - name: Check openrestdb.jar exists
      stat:
        path: "../../src/openrestdb/target"
      register: src_openrestdb_target
      tags: src_openrestdb_target

    - name: Build openrestdb.jar
      ansible.builtin.command: mvn package
      args:
        chdir: "../../src/openrestdb"
      when: src_openrestdb_target.stat.exists == false
      tags:
        - mvn_package

    - name: Check openrestdb template exists
      stat:
        path: "../../build/openrestdb.demo/bin"
      register: build_openrestdb_demo_bin
      tags: build_openrestdb_demo_bin

    - name: Copy openrestdb template
      ansible.builtin.copy:
        src: "../../src/openrestdb/template/"
        dest: "{{ install_path }}/openrestdb.demo"
        mode: preserve
      when: build_openrestdb_demo_bin.stat.exists == false
      tags: copy_openrestdb_template

    - name: Copy openrestdb.jar to build
      ansible.builtin.copy:
        src: "../../src/openrestdb/target/openrestdb-2.1.jar"
        dest: "{{ install_path }}/openrestdb.demo/lib/"
      tags: copy_openrestdb_jar

    - name: Fix up app destination in config file
      ansible.builtin.replace: 
        path: "{{ install_path }}/openrestdb.demo/conf/config.json"
        regexp: '\"path\": \"./app\"'
        replace: '"path": "../demo"'
      tags: fix_demo_dest
