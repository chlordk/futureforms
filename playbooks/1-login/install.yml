---

- hosts: localhost

  vars:
    - install_path: ../../build
    - app_number: 1 # only 0-9
    - app_name: "{{ app_number }}-login"
    - app_path: "{{ install_path }}/{{ app_name }}"

  tasks:
    - name: Install packages
      ansible.builtin.package:
        name: "{{ item }}"
      become: true
      become_method: sudo
      tags:
        - install_package
      loop:
        - sysstat
        - git
        - ansible
        - python3-psycopg2
        - npm
        - node-typescript
        - openjdk-19-jre
        - maven
        - postgresql

    - name: Futureforms core npm install
      ansible.builtin.command:
        cmd: npm install
        creates: "../../src/core/package-lock.json"
      args:
        chdir: "../../src/core"
      tags:
        - npm_install_core

    - name: "Futureforms {{ app_name }} npm install"
      ansible.builtin.command:
        cmd: npm install
        creates: "../../src/{{ app_name }}/package-lock.json"
      args:
        chdir: "../../src/{{ app_name }}"
      tags:
        - npm_install_demo

    - name: Build Futureforms core
      ansible.builtin.command:
        cmd: npm run build
        creates: "{{ install_path }}/core/package.json"
      args:
        chdir: "../../src/core"
      tags:
        - build_core

    - name: Install Futureforms demo app packages based on package.json using the npm
      community.general.npm:
        path: "../../src/{{ app_name }}"
        state: present
      tags:
        - npm_install_demo

    - name: Create the postgres database user hr
      community.postgresql.postgresql_user:
        name: hr
        password: hr
        state: present
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - create-hr-user

    - name: Create the postgres database hr
      community.postgresql.postgresql_db:
        name: hr
        owner: hr
        state: present
      become: true
      become_method: sudo
      become_user: postgres
      tags:
        - create-hr-db

    - name: "Create dir {{ app_path }}"
      ansible.builtin.file:
        path: "{{ app_path }}/data"
        state: directory
      tags:
        - create-demo-openrestdb

    - name: Copy initial data.sql for archive
      ansible.builtin.copy:
        src: ../../src/demo/data/datademo.sql
        dest: "{{ app_path }}/data/"
      tags:
        - copy-data-sql

    - name: Install the postgres hr schema objects
      ansible.builtin.shell:
        cmd: psql -h 127.0.0.1 -U hr -d hr -f "../../src/demo/data/datademo.sql" && touch "{{ app_path }}/dbloaded.true"
        creates: "{{ app_path }}/dbloaded.true"
      environment:
        PGPASSWORD: hr
      tags:
        - install-hr-schema-objects

    - name: Check database.js template exists
      stat:
        path: "{{ app_path }}/bin"
      register: build_demo_openrestdb_bin
      tags: build_demo_openrestdb_bin

    - name: Copy openrestdb template
      ansible.builtin.copy:
        src: "../../src/openrestdb/template/"
        dest: "{{ app_path }}"
        mode: preserve
      when: build_demo_openrestdb_bin.stat.exists == false
      tags: copy_openrestdb_template

    - name: Build openrestdb.jar
      ansible.builtin.command:
        cmd: mvn package
        creates: "../../src/openrestdb/target" 
      args:
        chdir: "../../src/openrestdb"
      tags:
        - build_openrestdb

    - name: Check openrestdb.jar exists
      stat:
        path: "{{ app_path }}/lib/openrestdb-2.1.jar"
      register: check_demo_openrestdb_jar
      tags: check_demo_openrestdb_jar

    - name: Copy openrestdb.jar
      ansible.builtin.copy:
        src: "../../src/openrestdb/target/openrestdb-2.1.jar"
        dest: "{{ app_path }}/lib"
        mode: preserve
      when: check_demo_openrestdb_jar.stat.exists == false
      tags: copy_openrestdb_jar

    - name: Build Futureforms demo app
      ansible.builtin.command:
        cmd: npm run build
        creates: "{{ app_path }}/app/app.js"
      args:
        chdir: "../../src/{{ app_name }}"
      tags:
        - npm_build_demo

    - name: Pack demo archive for deploy
      community.general.archive:
        path:
          - "{{ app_path }}"
        dest: "{{ app_path }}.tar.gz"
        format: gz
        exclude_path: [ "{{ app_path }}/dbloaded.true" ]
      tags:
        - pack_archive

    - name: Fix up instance number
      ansible.builtin.replace: 
        path: "{{ app_path }}/conf/config.json"
        regexp: "dbjs[0-9]+"
        replace: "dbjs{{ app_number }}"
      tags:
        - fix_instance_number

    - name: Fix up port number
      ansible.builtin.replace: 
        path: "{{ app_path }}/conf/config.json"
        regexp: "900([1-3])"
        replace: "90{{ app_number }}\\1"
      tags:
        - fix_port_number

# vim: tabstop=2 expandtab :
